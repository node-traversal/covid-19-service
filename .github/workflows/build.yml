name: Build and Deploy to GKE

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-west1-a
  GKE_CLUSTER: example-gke-cluster
  IMAGE: covid-19-texas-cases-service
  REGISTRY_HOSTNAME: gcr.io
  DEPLOYMENT_NAME: covid

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java JDK
        uses: actions/setup-java@v1.3.0
        with:
          java-version: 11.x

      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          # Set up docker to authenticate
          # via gcloud command-line tool.
          gcloud auth configure-docker

      # Build the Docker image
      - name: Build
        run: |
          docker ps
          java -version
          ./gradlew clean build buildDocker
          echo tagging $IMAGE:latest "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE":"$GITHUB_SHA"
          docker tag $IMAGE:latest "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE":"$GITHUB_SHA"

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:$GITHUB_SHA

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |
          echo "deploying"
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT
          echo "Updating kube config"
          kubectl version
          sed -i s#covid-19-texas-cases-service:latest#$REGISTRY_HOSTNAME/$GKE_PROJECT/$IMAGE:${GITHUB_SHA}# kube/deployment.yaml
          cat kube/deployment.yaml
          echo "pushing deployment"
          kubectl apply -f kube/deployment.yaml
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
